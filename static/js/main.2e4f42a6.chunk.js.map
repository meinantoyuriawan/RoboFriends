{"version":3,"sources":["components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Card","props","name","email","id","username","className","alt","src","CardList","cardArray","robots","map","user","i","SearchBox","searchChange","type","placeholder","onChange","Scroll","style","overflowY","height","children","App","onSearchChange","event","setState","searchField","target","value","state","fetch","then","response","json","usersJson","filteredRobots","this","filter","toLowerCase","includes","console","log","length","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"6MAgBeA,EAdF,SAACC,GACV,IAAQC,EAA8BD,EAA9BC,KAAMC,EAAwBF,EAAxBE,MAAOC,EAAiBH,EAAjBG,GAAIC,EAAaJ,EAAbI,SACzB,OACI,sBAAKC,UAAU,sDAAf,UACI,qBAAKC,IAAI,SAAQC,IAAG,+BAA0BJ,EAA1B,cACpB,gCACA,6BAAKF,IACL,6BAAKG,IACL,4BAAIF,WCgBDM,EAvBE,SAAC,GAAgB,IAK1BC,EALyB,EAAbC,OAKOC,KAAK,SAACC,EAAMC,GACnC,OACA,cAAC,EAAD,CAEIV,GAAIS,EAAKT,GACTF,KAAMW,EAAKX,KACXG,SAAUQ,EAAKR,SACfF,MAAOU,EAAKV,OAJPW,MAQX,OACE,8BACKJ,KCNMK,EAbG,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,aACnB,OACE,qBAAKV,UAAU,MAAf,SACE,uBACEA,UAAU,mCACVW,KAAK,SACLC,YAAY,gBACZC,SAAUH,OCEHI,EARA,SAACnB,GACd,OACE,qBAAKoB,MAAO,CAACC,UAAW,SAAUC,OAAO,SAAzC,SACGtB,EAAMuB,YCiDEC,E,kDA/Cb,aAAgB,IAAD,8BACb,gBAiBFC,eAAiB,SAACC,GAChB,EAAKC,SAAS,CAAEC,YAAaF,EAAMG,OAAOC,SAjB1C,EAAKC,MAAQ,CACXrB,OAAQ,GACRkB,YAAa,IAJF,E,qDAQf,WAAsB,IAAD,OACnBI,MAAM,8CACLC,MAAK,SAAAC,GACJ,OAAOA,EAASC,UAEjBF,MAAK,SAAAG,GACJ,EAAKT,SAAS,CAAEjB,OAAQ0B,S,oBAQ5B,WAAW,IAAD,OACFC,EAAiBC,KAAKP,MAAMrB,OAAO6B,QAAO,SAAA7B,GAC9C,OAAOA,EAAOT,KAAKuC,cAAcC,SAAS,EAAKV,MAAMH,YAAYY,kBAGnE,OADAE,QAAQC,IAAIN,GACqB,IAA7BC,KAAKP,MAAMrB,OAAOkC,OACb,2CAGL,sBAAKvC,UAAU,KAAf,UACE,8CACA,cAAC,EAAD,CAAWU,aAAcuB,KAAKb,iBAC9B,cAAC,EAAD,UAGI,cAAC,EAAD,CAAUf,OAAQ2B,a,GAtCdQ,aCKHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBf,MAAK,YAAkD,IAA/CgB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCAdO,IAASC,OACP,cAAC,EAAD,IACCC,SAASC,eAAe,SAM3BX,M","file":"static/js/main.2e4f42a6.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Card = (props) => {\r\n    const { name, email, id, username } = props;\r\n    return (\r\n        <div className='tc bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5'>\r\n            <img alt='robots'src={`https://robohash.org/${id}?200x200`}/>\r\n            <div>\r\n            <h2>{name}</h2>\r\n            <h4>{username}</h4>\r\n            <p>{email}</p>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Card;","import React from \"react\";\r\nimport Card from \"./Card\";\r\n\r\nconst CardList = ({ robots }) => {\r\n  // testing component did catch for next improvement\r\n  // if (true) {\r\n  //   throw new Error('error has been occured');\r\n  // }\r\n  const cardArray = robots.map ((user, i) => {\r\n    return (\r\n    <Card \r\n        key={i} \r\n        id={user.id} \r\n        name={user.name} \r\n        username={user.username} \r\n        email={user.email}/\r\n    >\r\n    );\r\n  })\r\n  return (\r\n    <div>\r\n        {cardArray}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CardList;","import React from \"react\";\r\n\r\nconst SearchBox = ({ searchChange }) => {\r\n  return (\r\n    <div className='pa2'>\r\n      <input \r\n        className='pa3 ba b--green bg-lightest-blue'\r\n        type='search' \r\n        placeholder='search robots'\r\n        onChange={searchChange}\r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SearchBox","import React from \"react\";\r\n\r\n\r\nconst Scroll = (props) => {\r\n  return(\r\n    <div style={{overflowY: 'scroll', height:'800px'}}>\r\n      {props.children}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Scroll;","import React, { Component } from \"react\";\r\nimport CardList from '../components/CardList'\r\nimport SearchBox from \"../components/SearchBox\";\r\nimport Scroll from \"../components/Scroll\";\r\n// import ErrorBoundry from \"../components/ErrorBoundry\"\r\n// for next improvement\r\n\r\nclass App extends Component {\r\n  constructor () {\r\n    super()\r\n    this.state = {\r\n      robots: [],\r\n      searchField: ''\r\n    }\r\n  }\r\n\r\n  componentDidMount () {\r\n    fetch('https://jsonplaceholder.typicode.com/users')\r\n    .then(response => {\r\n      return response.json();\r\n    })\r\n    .then(usersJson => {\r\n      this.setState({ robots: usersJson })\r\n    })\r\n  }\r\n\r\n  onSearchChange = (event) => {\r\n    this.setState({ searchField: event.target.value})\r\n  }\r\n\r\n  render () {\r\n    const filteredRobots = this.state.robots.filter(robots => {\r\n      return robots.name.toLowerCase().includes(this.state.searchField.toLowerCase())\r\n    })\r\n    console.log(filteredRobots)\r\n    if (this.state.robots.length === 0) {\r\n      return <h1>Loading..</h1>\r\n    } else {\r\n      return (\r\n        <div className='tc'>\r\n          <h1>RoboFriends!</h1>\r\n          <SearchBox searchChange={this.onSearchChange}/>\r\n          <Scroll>\r\n          {/* for next improvement */}\r\n            {/* <ErrorBoundry> */}\r\n              <CardList robots={filteredRobots} />\r\n            {/* </ErrorBoundry> */}\r\n          </Scroll>\r\n        </div>\r\n      )\r\n    }\r\n\r\n  }\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App'\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\n\nReactDOM.render(\n  <App/>\n  ,document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}